<!DOCTYPE html>
<html lang="en-US">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <title>Nylas Scheduler Simple Example</title>

        <link href="app.css" rel="stylesheet">
        <!-- Import the Nylas Schedule Editor script -->
        <script src="https://schedule.nylas.com/schedule-editor/v1.0/schedule-editor.js" type="text/javascript"></script>

    </head>

<body>
    <div class="wrapper__outer">
        <div class="wrapper__inner">

            <h1>Settings</h1>
            <p>Connect calendar accounts</p>

            <div class="element__wrapper">
                <div id="calendars-list">
                    <span class="accounts-list-heading">Calendar accounts</span>
                    <div class="account-profiles">
                        <% if(connectedAccounts && Object.keys(connectedAccounts).length > 0) { %>
                            <% for(const accountId in connectedAccounts) {%>
                                <div class="account-profile">
                                    <span class="account-email"><%= connectedAccounts[accountId].email_address  %></span>
                                    <button type="button" class="del-button" onclick="deleteAccount(<%= JSON.stringify(accountId) %>)">-</button>
                                </div>
                            <% } %>
                        <% } %>
                    </div>
                </div>
                <button type="button" class="button" onclick="connectAccount()">Connect account</button>
            </div>

            <hr />

            <div class="element__wrapper">
                <h2 class="title-heading">Scheduler Widget</h2>
                <% if(connectedAccounts && Object.keys(connectedAccounts).length > 0) { %>
                    <p>Setup schedule editor:</p>
                    <% for(const accountId in connectedAccounts) {%>
                        <div class="schedule-button-box">
                            <button
                                    type="button"
                                    class="button"
                                    onclick="loadScheduleEditorWidget(<%= JSON.stringify(accountId) %>)"
                                    data-account=<%= accountId %>
                            ><%= connectedAccounts[accountId].email_address %></button>
                        </div>
                    <% } %>
                <% } %>
                <script>
                    let accounts = <%- JSON.stringify(connectedAccounts) %>

                    function loadScheduleEditorWidget(accountId) {
                        nylas.scheduler.show({
                            auth: {
                                // Account access_token with active calendar scope
                                accessToken: accounts[accountId].access_token,
                            },
                            behavior: {
                                displayOnly: ['reminders', 'event-info', 'calendars', 'opening-hours', 'booking-flow',
                                    'custom-fields', 'page-styles'
                                ],
                            },
                            style: {
                                // Style the schedule editor
                                tintColor: '#32325d',
                                backgroundColor: 'white',
                            },
                            defaults: {
                                event: {
                                    title: "30-min Meeting",
                                    duration: 30
                                },
                                appearance: {
                                    company_name: "Clinic",
                                    logo: "https://via.placeholder.com/300x150.jpg"
                                },
                                booking: {
                                    additional_fields: [
                                        {
                                            label: "Summary",
                                            name: "summary",
                                            required: true,
                                            type: "text"
                                        }
                                    ]
                                }
                            },
                        });
                    }

                    async function connectAccount() {
                        const response = await fetch('/getAuthUrl');
                        const result = await response.json();
                        window.location.href = result.authUrl;
                    }


                    async function deleteAccount(accountId) {
                        const response = await fetch('/removeAccount?accountId=' + accountId);
                        await response.json();
                        window.location.href = window.location.origin;
                    }

                    <% if (reRender === true) { %>
                        console.log('rerender page');
                        window.location.href = window.location.origin;
                    <% } %>
                </script>
            </div>

        </div>
    </div>
</body>

</html>